{"ast":null,"code":"const url = \"https://wbdv-generic-server.herokuapp.com/api/Chengcheng/courses\";\nexport const findAllCourses = () => fetch(url).then(response => response.json());\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nexport const deleteCourse = courseId => fetch(`${url}/${courseId}`, {\n  method: 'DELETE'\n}).then(response => response.json());\nexport const createCourse = newCourse => fetch(url, {\n  method: 'POST',\n  body: JSON.stringify(newCourse),\n  headers: {\n    'content-type': 'application/json'\n  }\n}).then(response => response.json());\nexport const editCourse = course => {\n  this.setState({\n    courseBeingEdited: course\n  });\n};","map":{"version":3,"sources":["/Users/mac/Desktop/5610 web/cs5610-f20-client-react-chengcheng/src/services/CourseService.js"],"names":["url","findAllCourses","fetch","then","response","json","BrowserRouter","Link","Route","deleteCourse","courseId","method","createCourse","newCourse","body","JSON","stringify","headers","editCourse","course","setState","courseBeingEdited"],"mappings":"AAAA,MAAMA,GAAG,GAAG,kEAAZ;AAEA,OAAO,MAAMC,cAAc,GAAG,MAC1BC,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,CADG;AAIC,SAAQC,aAAR,EAAuBC,IAAvB,EAA6BC,KAA7B,QAAyC,kBAAzC;AACR,OAAO,MAAMC,YAAY,GAAIC,QAAD,IACxBR,KAAK,CAAE,GAAEF,GAAI,IAAGU,QAAS,EAApB,EAAsB;AACvBC,EAAAA,MAAM,EAAE;AADe,CAAtB,CAAL,CAGKR,IAHL,CAGUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHtB,CADG;AAMP,OAAO,MAAMO,YAAY,GAAIC,SAAD,IACxBX,KAAK,CAACF,GAAD,EAAK;AACNW,EAAAA,MAAM,EAAE,MADF;AAENG,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAFA;AAGNI,EAAAA,OAAO,EAAE;AACL,oBAAe;AADV;AAHH,CAAL,CAAL,CAOKd,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,CADG;AAUP,OAAO,MAAMa,UAAU,GAAIC,MAAD,IAAY;AAClC,OAAKC,QAAL,CAAc;AACVC,IAAAA,iBAAiB,EAAEF;AADT,GAAd;AAGH,CAJM","sourcesContent":["const url = \"https://wbdv-generic-server.herokuapp.com/api/Chengcheng/courses\"\n\nexport const findAllCourses = () =>\n    fetch(url)\n        .then(response => response.json())\n\n        import {BrowserRouter, Link, Route} from \"react-router-dom\";\nexport const deleteCourse = (courseId) => \n    fetch(`${url}/${courseId}`,{\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n\nexport const createCourse = (newCourse) =>\n    fetch(url,{\n        method: 'POST',\n        body: JSON.stringify(newCourse),\n        headers: {\n            'content-type':'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport const editCourse = (course) => {\n    this.setState({\n        courseBeingEdited: course\n    })\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}