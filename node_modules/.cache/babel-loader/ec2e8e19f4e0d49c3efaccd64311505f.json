{"ast":null,"code":"const topicUrl = \"https://wbdv-generic-server.herokuapp.com/api/Chengcheng/topics\";\nconst lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/Chengcheng/lessons\";\nexport const findTopicsForLesson = lessonId => fetch(`${lessonUrl}/${lessonId}/topics`).then(response => response.json());\nexport const createTopicForLesson = (lessonId, topic) => fetch(`${lessonUrl}/${lessonId}/topics`, {\n  method: \"POST\",\n  body: JSON.stringify(topic),\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n}).then(response => response.json());\n\nconst createTopic = lessonId => fetch(`${lessonUrl}/${lessonId}/topics`, {\n  method: \"POST\",\n  body: JSON.stringify({\n    title: \"NEW TOPIC\"\n  }),\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n}).then(response => response.json());\n\nexport const updateTopic = topic => fetch(`${topicUrl}/${topic._id}`, {\n  method: \"PUT\",\n  body: JSON.stringify(topic),\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport const deleteTopic = topicId => fetch(`${topicUrl}/${topicId}`, {\n  method: \"DELETE\"\n}).then(response => response.json());\nexport default {\n  findTopicsForLesson,\n  createTopicForLesson,\n  updateTopic,\n  deleteTopic\n};","map":{"version":3,"sources":["/Users/mac/Desktop/5610 web/cs5610-f20-client-react-chengcheng/src/services/TopicService.js"],"names":["topicUrl","lessonUrl","findTopicsForLesson","lessonId","fetch","then","response","json","createTopicForLesson","topic","method","body","JSON","stringify","headers","createTopic","title","updateTopic","_id","deleteTopic","topicId"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,iEAAjB;AACA,MAAMC,SAAS,GAAG,kEAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,QAAD,IACjCC,KAAK,CAAE,GAAEH,SAAU,IAAGE,QAAS,SAA1B,CAAL,CACGE,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,CADK;AAIP,OAAO,MAAMC,oBAAoB,GAAG,CAACL,QAAD,EAAWM,KAAX,KAClCL,KAAK,CAAE,GAAEH,SAAU,IAAGE,QAAS,SAA1B,EAAoC;AACvCO,EAAAA,MAAM,EAAE,MAD+B;AAEvCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAFiC;AAGvCK,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAH8B,CAApC,CAAL,CAMGT,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,CADK;;AASL,MAAMQ,WAAW,GAAIZ,QAAD,IACpBC,KAAK,CAAE,GAAEH,SAAU,IAAGE,QAAS,SAA1B,EAAoC;AACvCO,EAAAA,MAAM,EAAE,MAD+B;AAEvCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBG,IAAAA,KAAK,EAAE;AADY,GAAf,CAFiC;AAKvCF,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAL8B,CAApC,CAAL,CASGT,IATH,CASQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATpB,CADA;;AAYF,OAAO,MAAMU,WAAW,GAAGR,KAAD,IACxBL,KAAK,CAAE,GAAEJ,QAAS,IAAGS,KAAK,CAACS,GAAI,EAA1B,EAA6B;AAChCR,EAAAA,MAAM,EAAE,KADwB;AAEhCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAF0B;AAGhCK,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHuB,CAA7B,CAAL,CAMGT,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,CADK;AASP,OAAO,MAAMY,WAAW,GAAEC,OAAO,IAC/BhB,KAAK,CAAE,GAAEJ,QAAS,IAAGoB,OAAQ,EAAxB,EAA0B;AAC7BV,EAAAA,MAAM,EAAE;AADqB,CAA1B,CAAL,CAEGL,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,CADK;AAMP,eAAe;AACXL,EAAAA,mBADW;AAEXM,EAAAA,oBAFW;AAGXS,EAAAA,WAHW;AAIXE,EAAAA;AAJW,CAAf","sourcesContent":["const topicUrl = \"https://wbdv-generic-server.herokuapp.com/api/Chengcheng/topics\"\nconst lessonUrl = \"https://wbdv-generic-server.herokuapp.com/api/Chengcheng/lessons\"\n\nexport const findTopicsForLesson = (lessonId) =>\n  fetch(`${lessonUrl}/${lessonId}/topics`)\n    .then(response => response.json())\n\nexport const createTopicForLesson = (lessonId, topic) =>\n  fetch(`${lessonUrl}/${lessonId}/topics`, {\n    method: \"POST\",\n    body: JSON.stringify(topic),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(response => response.json())\n\n  const createTopic = (lessonId) =>\n  fetch(`${lessonUrl}/${lessonId}/topics`, {\n    method: \"POST\",\n    body: JSON.stringify({\n      title: \"NEW TOPIC\"\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  })\n    .then(response => response.json())\n    \nexport const updateTopic= (topic) =>\n  fetch(`${topicUrl}/${topic._id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(topic),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).then(response => response.json())\n\nexport const deleteTopic= topicId =>\n  fetch(`${topicUrl}/${topicId}`,{\n    method: \"DELETE\"\n  }).then(response => response.json())\n\n\nexport default {\n    findTopicsForLesson,\n    createTopicForLesson,\n    updateTopic,\n    deleteTopic\n}"]},"metadata":{},"sourceType":"module"}