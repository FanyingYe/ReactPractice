{"ast":null,"code":"import \"../\";\nconst initialState = {\n  widgets: [{\n    _id: \"123\",\n    name: \"Widget 1\"\n  }, {\n    _id: \"234\",\n    name: \"Widget 2\"\n  }, {\n    _id: \"456\",\n    name: \"Widget 3\"\n  }]\n};\n\nconst widgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CREATE_WIDGET\":\n      return {\n        widgets: [...state.widgets, {\n          _id: Date.now() + \"\",\n          name: \"new widget\"\n        }]\n      };\n\n    case \"UPDATE_WIDGET\":\n    case \"DELETE_WIDGET\":\n      return {\n        widgets: state.widgets.filter(widget => widget._id !== action.widget._id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/mac/Desktop/5610 web/cs5610-f20-client-react-chengcheng/src/reducers/widgetsReducers.js"],"names":["initialState","widgets","_id","name","widgetReducer","state","action","type","Date","now","filter","widget"],"mappings":"AAAA,OAAe,KAAf;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADK,EAKL;AACID,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALK,EASL;AACID,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE;AAFV,GATK;AADQ,CAArB;;AAkBA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO;AACHN,QAAAA,OAAO,EAAE,CAAC,GAAGI,KAAK,CAACJ,OAAV,EAAkB;AACvBC,UAAAA,GAAG,EAAEM,IAAI,CAACC,GAAL,KAAY,EADM;AAEvBN,UAAAA,IAAI,EAAE;AAFiB,SAAlB;AADN,OAAP;;AAMJ,SAAK,eAAL;AACA,SAAK,eAAL;AACI,aAAO;AACHF,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcS,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACT,GAAP,KAAeI,MAAM,CAACK,MAAP,CAAcT,GAA5D;AADN,OAAP;;AAGJ;AACI,aAAOG,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,eAAeD,aAAf","sourcesContent":["import {} from \"../\"\n\nconst initialState = {\n    widgets: [\n        {\n            _id: \"123\",\n            name: \"Widget 1\"            \n        },\n        {\n            _id: \"234\",\n            name: \"Widget 2\"            \n        },\n        {\n            _id: \"456\",\n            name: \"Widget 3\"            \n        }\n\n    ]\n}\n\nconst widgetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"CREATE_WIDGET\":\n            return {\n                widgets: [...state.widgets,{\n                    _id: Date.now()+ \"\",\n                    name: \"new widget\"\n                }]\n            }\n        case \"UPDATE_WIDGET\":\n        case \"DELETE_WIDGET\":\n            return {\n                widgets: state.widgets.filter(widget => widget._id !== action.widget._id)\n            }\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer;"]},"metadata":{},"sourceType":"module"}