{"ast":null,"code":"import { DELETE_WIDGET, CREATE_WIDGET, UPDATE_WIDGET } from \"../actions/widgetActions\";\nconst initialState = {\n  widgets: [{\n    _id: \"123\",\n    name: \"Widget 1\",\n    editing: false\n  }, {\n    _id: \"234\",\n    name: \"Widget 2\"\n  }, {\n    _id: \"456\",\n    name: \"Widget 3\"\n  }]\n};\n\nconst widgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_WIDGET:\n      return {\n        widgets: [...state.widgets, {\n          _id: Date.now() + \"\",\n          name: \"new widget\"\n        }]\n      };\n\n    case UPDATE_WIDGET:\n      return {\n        widgets: state.widgets.map(widget => widget._id === action.widget._id ? action.widget : widget)\n      };\n\n    case DELETE_WIDGET:\n      return {\n        widgets: state.widgets.filter(widget => widget._id !== action.widget._id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["/Users/mac/Desktop/5610 web/cs5610-f20-client-react-chengcheng/src/reducers/widgetsReducers.js"],"names":["DELETE_WIDGET","CREATE_WIDGET","UPDATE_WIDGET","initialState","widgets","_id","name","editing","widgetReducer","state","action","type","Date","now","map","widget","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,aAAvB,EAAsCC,aAAtC,QAA0D,0BAA1D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,OAAO,EAAC;AAHZ,GADK,EAML;AACIF,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE;AAFV,GANK,EAUL;AACID,IAAAA,GAAG,EAAE,KADT;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAVK;AADQ,CAArB;;AAmBA,MAAME,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AACI,aAAO;AACHG,QAAAA,OAAO,EAAE,CAAC,GAAGK,KAAK,CAACL,OAAV,EAAkB;AACvBC,UAAAA,GAAG,EAAEO,IAAI,CAACC,GAAL,KAAY,EADM;AAEvBP,UAAAA,IAAI,EAAE;AAFiB,SAAlB;AADN,OAAP;;AAMJ,SAAKJ,aAAL;AACI,aAAO;AACHE,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAcU,GAAd,CAAkBC,MAAM,IAAIA,MAAM,CAACV,GAAP,KAAeK,MAAM,CAACK,MAAP,CAAcV,GAA7B,GAAmCK,MAAM,CAACK,MAA1C,GAAmDA,MAA/E;AADN,OAAP;;AAGJ,SAAKf,aAAL;AACI,aAAO;AACHI,QAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,CAAcY,MAAd,CAAqBD,MAAM,IAAIA,MAAM,CAACV,GAAP,KAAeK,MAAM,CAACK,MAAP,CAAcV,GAA5D;AADN,OAAP;;AAGJ;AACI,aAAOI,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import {DELETE_WIDGET, CREATE_WIDGET, UPDATE_WIDGET} from \"../actions/widgetActions\"\n\nconst initialState = {\n    widgets: [\n        {\n            _id: \"123\",\n            name: \"Widget 1\",\n            editing:false           \n        },\n        {\n            _id: \"234\",\n            name: \"Widget 2\"            \n        },\n        {\n            _id: \"456\",\n            name: \"Widget 3\"            \n        }\n\n    ]\n}\n\nconst widgetReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_WIDGET:\n            return {\n                widgets: [...state.widgets,{\n                    _id: Date.now()+ \"\",\n                    name: \"new widget\"\n                }]\n            }\n        case UPDATE_WIDGET:\n            return {\n                widgets: state.widgets.map(widget => widget._id === action.widget._id ? action.widget : widget)\n            }\n        case DELETE_WIDGET:\n            return {\n                widgets: state.widgets.filter(widget => widget._id !== action.widget._id)\n            }\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer;"]},"metadata":{},"sourceType":"module"}